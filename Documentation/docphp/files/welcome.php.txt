<?php
session_start(); // a placer en tout premier, avant HTML car utilise un cookie

// Test the session to see if is_auth flag was set (meaning they logged in successfully)
// If test fails, send the user to login.php and prevent rest of page being shown.
if (!isset($_SESSION["is_auth"])) {
	header("location: login.php");
	exit;
}
else if (isset($_REQUEST['logout']) && $_REQUEST['logout'] == true) {
	// At any time we can logout by sending a "logout" value which will unset the "is_auth" flag.
	// We can also destroy the session if so desired.
	unset($_SESSION['is_auth']);
	session_destroy();

	// After logout, send them back to login.php
	header("location: login.php");
	exit;
}


require "fonctions.php";
require "DB_conf.php";
$url_page = $_SERVER['PHP_SELF'];


if (isset($_SESSION['commandes'])) {
	$commandes = $_SESSION['commandes'];
}
else
{
	// $commandes = "";
	unset ($commandes);
	unset($_SESSION['commandes']);
}
// echo"<br/>Etat de la commande: " . count($commandes) . "<br/>";

/*
- Faire authentification avant d'avoir accès aux données (tables)
- Si plus dans les temps, le clients voit sa denière commande et n'a pas l'option de "passer la commande"
*/



if(validation_utilisateur())
{
	// TODO: Extraire les spécifications de utilisateurs de base de donnée utilisateur dans validation_utilisateur()
	// Test: mockup qui contient les spécifications des utilisateurs
	$utilisateur['nom'] = $_SESSION['user_nom']; /*"Sémon";*/
	$utilisateur['prenom'] = $_SESSION['user_prenom']; /*"Thierry";*/
	$utilisateur['entreprise'] = $_SESSION['user_entreprise']; /*"Moulin SA";*/
	//!!!!!Changer manuellement le type de l'utilisateur (client ou manager) pour simuler les interfaces!!!!
	$utilisateur['type'] = $_SESSION['user_level']; /*"client"; //"manager" ou "client" */

	$db = db_connect();

	if ($utilisateur['type'] == "manager") //manager
	{
		if(isset($_POST['nom']) && isset($_POST['quantite']))
		{
			//Mise à jour base de donnée produits si changement
			$sql_query = "UPDATE boulangerie.produits SET quantite = ? WHERE nom = ?";
			$st = $db->prepare($sql_query);
			$p = array($_POST['quantite'], $_POST['nom']);
			$st->execute($p);
		}
	}
	else
	{
		if (check_time() && ($utilisateur['type'] = "client"))
		{
			// Récupère contenu de la table produits dont la quantité est supérieure à 0
			$col_element = array('nom', 'prix', 'quantite');
			$sql_query = ("SELECT " . join(", ", $col_element) . " FROM boulangerie.produits where quantite != 0");
		}
		else
		{
			echo "Désolé les commandes ne sont possibles qu'entre 6 heures et 8 heures du matin!";
		}
	}
}
	else
	{
		echo 'Utilisateur non-valide!';
	}
	?>

	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
	<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<title>Liste des produits</title>
	</head>
	<body>
		<?php
		//Table des produits disponibles
		if ($utilisateur['type'] == "manager") //le boulanger
		{
			$modifier = 0;
			if (isset($_GET['modifier']) && is_scalar($_GET['modifier']))
			{
				$st = $db->prepare("SELECT nom, quantite FROM boulangerie.produits WHERE (id = ?)");
				if ($st && $st->execute(array($_GET['modifier'])))
				{
					$row = $st->fetch(PDO::FETCH_ASSOC);
					if (isset($row['nom']) && isset($row['quantite'])) {
						$nom = $row['nom'];
						$quantite = $row['quantite'];
					}
				}
				?>
				<form action="<?php echo $url_page ?>" method="post">
					<p><label for="nom">Nom du produit: </label><input type="text" name="nom" id="nom" value="<?php if (isset($nom)) { echo htmlentities($nom); } ?>" />
						<label for="quantite">Quantité max: </label><input type="text" name="quantite" value="<?php if (isset($quantite)) { echo htmlentities($quantite); } ?>" />
						<input type="submit" />
					</p>
				</form>

			<?php
			}
			// Récupère contenu de la table produits
			$sql_query = ("SELECT * FROM boulangerie.produits");
			$col_nom = array('nom du produit', 'prix unitaire', 'nombre à disposition', 'action');
			$col_element = array('nom', 'prix', 'quantite');
			$type = 1;
			$color = '"#CCCCFF"';
			$parametre = 0;
			// Affichage contenu de la table produits disponibles
			echo '<p><strong>Liste des produits à disposition:</strong ></p>';
			?>

			<form action="<?php echo $url_page ?>" method="GET" id="logout">
				<br /><input type="submit" name="logout" id="logout" value="Se déconnecter" />
			</form> <br/>

		<?php
			echo makeTable($type, $col_nom, $col_element, $db->query($sql_query), $color, $url_page, $parametre);
			?>
			<form action="<?php echo $url_page ?>" method="GET" id="logout">
				<br /><input type="submit" name="logout" id="logout" value="Se déconnecter" />
			</form>
			<?php
		}
		else //Les clients
		{
			if (check_time() && ($utilisateur['type'] = "client"))
			{
				// Ecriture de la commande effectuée dans la table commandes
							if(isset($_POST['passercommande']))
							{
								$commandes = $_SESSION['commandes'];
								foreach ($commandes as $TimeStamp => $commande) {
									$sql_query = "INSERT INTO boulangerie.commandes( nom, prenom, entreprise,produit, quantite, prix_total, time_stamp) VALUES (?, ?, ?, ?, ?, ?, ?)";
								try {
									$id = $db->LastInsertId();
									$st = $db->prepare($sql_query);
									// $p = array( 'Semon', 'Thierry', 'Moulin SA', 'ballon', '1', '10', '2017-03-07 09:38:21');
									$p = array($utilisateur['nom'], $utilisateur['prenom'], $utilisateur['entreprise'], $commande['produit'], $commande['quantite'], $commande['prix-total'], $TimeStamp);
									$st->execute($p);

								}
								catch (PDOException $e) {
									echo "insert error: " . htmlentities($e->getMessage()) . "<br/><br/>";
								}

								};
								echo "Commande effectuée avec succès<br/>";
								$type = 2;
								$col_nom = array('quantité commandée', 'nom du produit', 'prix total');
								$col_element = array('quantite', 'produit', 'prix_total');
								$color = '"#CCCCFF"';
								$parametre = 0;

								$sql_query = ("SELECT " . join(", ", $col_element) . " FROM boulangerie.commandes WHERE nom = '" . $utilisateur['nom'] . "' AND prenom = '" . $utilisateur['prenom'] . "' AND entreprise = '" . $utilisateur['entreprise'] . "'");

								echo '<p><strong>Lise des produits commandés:</strong ></p>';
								echo makeTable($type, $col_nom, $col_element, $db->query($sql_query), $color, $url_page, $parametre);
								echo "<h2>Montant de la commande: " . htmlentities($parametre) . "</h2>";
								unset($_SESSION['commandes']); // Suppression de la variable de session pour recommencer avec une commande neutre
								unset($_SESSION['asoustraire']);
								session_destroy();
								exit;
							}
				// Fin de l'écriture de la commande effectuée dans la table commandes



				// Affichage contenu de la commande en cours
				$result = $db->query('SELECT * FROM boulangerie.produits where quantite != 0');
				while($row = $result->fetch(PDO::FETCH_ASSOC))
				{
					$clé = $row['nom'];
					$valeur = $row['quantite'];
					//prix : $valeur = $row['quantite'];
// $produitPossible[$clé] = $valeur;
				}
				// print_r ($produitPossible);


				echo"ceci est le compteur de session:" ;
				print_r($_SESSION['compteur']);
				$_SESSION['compteur'] = $_SESSION['compteur'] + 1;




				/* On récupère si il existe le nom du produit commandé par le formulaire */
				$prodcommande = isset($_POST['produitform'])?$_POST['produitform']:null;
				$quantitecommande = isset($_POST['quantiteform'])?$_POST['quantiteform']:null;

				?>
				<form action="<?php echo $url_page ?>" method="post" id="commande">
					<fieldset style="border: 3px double #333399">
						<legend>Sélectionnez un produit</legend>
						<?php

						$produitPossible = recuperationproduits($db);
						soustraireproduitscommandes($db, $produitPossible);

						soustraireproduitsencours($commandes, $produitPossible);
						// $produitPossible = recuperationproduits($db);
						echo '<select name="' . urlencode('produitform') . '" onchange="document.forms[\'commande\'].submit();">';
						echo '<option value="-1">- - - Choisissez un produit - - -</option>';
						foreach($produitPossible as $key => $value)
						{
							// echo '<option value="' . htmlentities($key) . '" >' . htmlentities($key) . '</option>';
							echo '<option value="' . htmlentities($key) . '" ' . ((isset($prodcommande) && $prodcommande == $key)?" selected=\"selected\"":null) . '>' . htmlentities($key) . '</option>';
						}
						echo '</select>';
						echo '<select name="quantiteform">';
						for ($i=1; $i < $produitPossible[$prodcommande]['quantite']+1; $i++) {
						// for ($i=1; $i < $produitPossible[$prodcommande]+1; $i++) {
							echo '<option value="' .htmlentities($i). '" ' . '>' . htmlentities($i) . '</option>';
						}
						echo '</select>';
						// $_POST['produitform']='';
						?>

						<br /><input type="submit" name="ok" id="ok" value="Sélectionner" />
					</fieldset>
				</form>
				<?php
//Début de la partie qui pourrait être placée avant le HTML, dans la partie client?

				// Suppression de la ligne sélectionnée de l'array des commandes en cours
				if (isset($_GET['supprimer']) && is_scalar($_GET['supprimer']))
				{
					unset($commandes[$_GET['supprimer']]);
					$_SESSION['commandes'] = $commandes;
				}

				if(isset($_POST['ok']) && isset($_POST['produitform']) && isset($_POST['quantiteform']))
				{
					$currentTime = date('Y-m-d H:i:s');
					$commandes[$currentTime] = array("produit" => $_POST["produitform"],
																					 "quantite" => $_POST["quantiteform"],
																				 	 "prix" => $produitPossible[$prodcommande]['prix'],
																				 	 "prix-total" => $_POST["quantiteform"] * $produitPossible[$prodcommande]['prix']);
					// $produitasoustraire = array("produit" => $_POST["produitform"], "quantite" => $_POST["quantiteform"]);
// print_r($commandes);
// soustraireproduitsencours($commandes, $produitPossible);
					// sauvegarde dans la Session et affichage sous forme de tableau
// echo"<br/>Etat de la commande --: " . count($commandes);
					$_SESSION['commandes'] = $commandes;
					// $_SESSION['asoustraire'] = $produitasoustraire;

				} // mis fin du if ici

//Fin de la partie qui pourrait être placée avant le HTML, dans la partie client?
					$type = 3;
					$col_nom = array('TimeStamp', 'Nom du produit', 'Quantité', 'Prix unitaire', 'Prix total', 'action');
					$col_element = array('quantite', 'produit', 'prix_total');
					$color = '"#CCCCFF"';
					echo makeTable($type, $col_nom, $col_element, $db, $color, $url_page, $commandes);

					if(count($commandes)!= 0)
					{
						?>
						<form action="<?php echo $url_page ?>" method="post" id="passercommande">
						<br /><input type="submit" name="passercommande" id="passercommande" value="Passer commande" />
					</form>
					<?php

					} else {
						echo "<br/>Vous devez choisir un article au minimum pour pouvoir passer commande";
					}
			}
		}
		?>
	</body>
	</html>
	<?php
	//$result->closeCursor();
	unset($db);
	?>

